read.csv(file="/data/us/gdpus_unlabelled.csv", header = FALSE, sep = ",")
read.csv(file="../data/us/gdpus_unlabelled.csv", header = FALSE, sep = ",")
read.csv(file="/home/xenakas/Desktop/Git/hierarchical_modelling/data/us/gdpus_unlabelled.csv", header = FALSE, sep = ",")
data = read.csv(file="/home/xenakas/Desktop/Git/hierarchical_modelling/data/us/gdpus_unlabelled.csv", header = FALSE, sep = ",")
View(data)
data[1, ]
data[2, ]
a = data[2, ]
View(a)
st = data[1, ]
ind = data[2, ]
paste(st, ind)
paste(st, ind)
agg = paste(st, ind)
res = aggregate(. ~ rn, rbind(st,ind), paste)
res = aggregate( rbind(st,ind), paste)
st$rn <- rownames(df1)
ind$rn <- rownames(df2)
res = aggregate(. ~ rn, rbind(st,ind), paste)
st = data[1, ]
ind = data[2, ]
st$rn <- rownames(df1)
st$rn <- rownames(st)
ind$rn <- rownames(ind)
st$rn <- rownames(st)
ind$rn <- rownames(ind)
ind$rn <- rownames(ind)
res = aggregate(. ~ rn, rbind(st,ind), paste)
res
View(res)
View(ind)
data = read.csv(file="gdp_us_state_ind.csv", header = TRUE, sep = ",")
data = read.csv(file="/gdp_us_state_ind.csv", header = TRUE, sep = ",")
data = read.csv(file=".../gdp_us_state_ind.csv", header = TRUE, sep = ",")
data = read.csv(file="/home/xenakas/Desktop/Git/hierarchical_modelling/grouped_ts/gdp_us_state_ind.csv", header = TRUE, sep = ",")
View(data)
tail(data)
View(tail(data))
list(2, c(3, 2))
hts(data)
install.packages("hts")
library(hts)
hts(data)
1366/57
1365/57
hts(data, nodes=list(3))
hts(data)
s = smatrix(y)
y = hts(data)
s = smatrix(y)
View(s)
View(tail(data))
data = read.csv(file="/home/xenakas/Desktop/Git/hierarchical_modelling/grouped_ts/gdp_us_state_ind.csv", header = TRUE, sep = ",")
View(tail(data))
library(hts)
y = hts(data, characters = list(c(2, 3)))
View(tail(data))
y = hts(data, characters = list(c(2)))
y = hts(data, characters = list(c(2,3)))
data = read.csv(file="/home/xenakas/Desktop/Git/hierarchical_modelling/grouped_ts/gdp_us_state_ind.csv", header = TRUE, sep = ",")
library(hts)
y = hts(data, characters = list(c(2,3)))
s = smatrix(y)
y = hts(data, characters = list(c(2,3)))
colnames(data)
rownames(data)
rownames(data) = data[,1]
rownames(data)
rownames(data) = as.Date(data[,1])
rownames(data)
rownames(data) = as.Date(data[,1])
rownames(data)
data$date <- NULL
colnames(data)
y = hts(data, characters = list(c(2,3)))
y = hts(data, characters = list(c(2,3)))
y = hts(data, characters = c(2,3))
s = smatrix(y)
View(head(s))
plot(y, levels = c(0, 1))
plot(y, levels = c(0, 1, 2))
gdpforecast <- forecast(y, h=10, method="bu")
plot(infantforecast, include=10)
plot(gdpforecast, include=10)
allts <- aggts(y)
allf <- matrix(, nrow=10, ncol=ncol(allts))
data = read.csv(file="/home/xenakas/Desktop/Git/hierarchical_modelling/grouped_ts/gdp_us_state_ind.csv", header = TRUE, sep = ",")
data = data[1:51, ]
View(tail(data))
library(hts)
rownames(data) = as.Date(data[,1])
rownames(data)
data$date <- NULL
colnames(data)
y = hts(data, characters = c(2,3))
s = smatrix(y)
View(head(s))
plot(y, levels = c(0, 1, 2))
gdpforecast <- forecast(y, h=10, method="bu")
plot(gdpforecast, include=10)
gdpforecast <- forecast(y, h=10, method="bu")
data = read.csv(file="/home/xenakas/Desktop/Git/hierarchical_modelling/grouped_ts/gdp_us_state_ind.csv", header = TRUE, sep = ",")
data = data[1:51, ]
library(hts)
rownames(data) = as.Date(data[,1])
rownames(data)
data$date <- NULL
colnames(data)
y = hts(data, characters = c(2,3))
s = smatrix(y)
plot(y, levels = c(0, 1, 2))
gdpforecast <- forecast(y, h=10, method="bu")
plot(gdpforecast, include=10)
allts <- aggts(y)
allf <- matrix(, nrow=10, ncol=ncol(allts))
for(i in 1:ncol(allts))
for(i in 1:ncol(allts))
allf[,i] <- forecast(auto.arima(allts[,i]), h=10, PI=FALSE)$mean
for(i in 1:ncol(allts))
allf[,i] <- forecast(auto.arima(allts[,i]), h=10, PI=FALSE)$mean
allf <- ts(allf)
View(allf)
# combine the forecasts with the group matrix to get a gts object
g <- matrix(c(rep(1, 8), rep(2, 8), rep(1:8, 2)), nrow = 2, byrow = T)
View(g)
View(head(s))
View(head(s,59))
# combine the forecasts with the group matrix to get a gts object
g <- s[1:52, ]
View(g)
y.f <- combinef(allf, groups = g)
# combine the forecasts with the group matrix to get a gts object
g <- s[1:52, ]
y.f <- combinef(allf, groups = g)
# combine the forecasts with the group matrix to get a gts object
g <- s
y.f <- combinef(allf, groups = g)
# combine the forecasts with the group matrix to get a gts object
g <- s
y.f <- combinef(allf, groups = g)
View(s)
# combine the forecasts with the group matrix to get a gts object
g <- s
y.f <- combinef(allf, nodes = g)
# combine the forecasts with the group matrix to get a gts object
g <- s[1:52,]
y.f <- combinef(allf, nodes = g)
# combine the forecasts with the group matrix to get a gts object
g <- get_nodes(y)
y.f <- combinef(allf, nodes = g)
View(y.f)
y.f <- combinef(allf, nodes = g)
plot(y.f, levels = c(0, 1, 2))
plot(y.f)
