# install.packages("devtools")
devtools::install_github("tidyverts/fasster")
version$version.string
version
rprofile_path = file.path(Sys.getenv("HOME"), ".Rprofile")
write('\noptions(repos=c(getOption(\'repos\'),
CRAN=\'https://cloud.r-project.org\',
USGS=\'https://owi.usgs.gov/R\'))\n',
rprofile_path,
append =  TRUE)
cat('Your Rprofile has been updated to include GRAN.
Please restart R for changes to take effect.')
version
RStudio.version()
versionInfo()
require(rstudioapi)
versionInfo()
install.packages("fablelite")
devtools::install_github("tidyverts/fablelite")
install.packages("dplyr")
devtools::install_github("tidyverts/fasster")
# install.packages("devtools")
devtools::install_github("tidyverse/dplyr@rc_0.8.0")
# install.packages("devtools")
devtools::install_github("tidyverse/dplyr@rc_0.8.0.9008")
# install.packages("devtools")
devtools::install_github("tidyverse/dplyr@rc_0.8.0.9009")
# install.packages("devtools")
devtools::install_github("tidyverse/dplyr@rc_0.8.0.9009")
packageVersion("ggplot2")
devtools::install_github("tidyverse/ggplot2")
install.packages("colorspace")
packageVersion("colorspace")
install.packages("namespace")
install.packages("purrr")
install.packages("methods")
install.packages("methods")
install.packages("methods")
install.packages("methods")
install.packages("methods")
version()
IRkernel::installspec(name='R 3.5.1')  # to register the kernel in the current R installation
IRkernel::installspec(displayname ='R 3.5.1')  # to register the kernel in the current R installation
setwd("~/Desktop/Git/hierarchical_modelling/hm")
gdp_agg <- read.csv(file="data/eu_gdp_eu28.csv", header=TRUE, sep=",")
gdp_agg  <- ts(gdp_agg$values, frequency = 4, start = 1995)
gdp_agg
autoplot(gdp_agg) +
xlab("Year") + ylab("Mln. Euro") +
ggtitle("ВВП ЕС")
library(forecast)
library(ggplot2)
autoplot(gdp_agg) +
xlab("Year") + ylab("Mln. Euro") +
ggtitle("ВВП ЕС")
train <- window(gdp_agg, end=c(2016,4))
test <- window(gdp_agg, start=c(2017,1))
gdp_rwf <- rwf(train,h=7)
gdp_rwfwd <- rwf(train,h=7, drift=TRUE)
gdp_snaive  <- snaive(train,h=7)
gdp_theta  <- thetaf(train, h=7)
gdp_arima  <- forecast(auto.arima(train), h=7)
gdp_ets <- forecast(ets(train), h=7)
autoplot(window(gdp_agg, start=2012)) +
autolayer(gdp_rwf, series="RW", PI=FALSE) +
autolayer(gdp_rwfwd, series="RW with drift", PI=FALSE) +
autolayer(gdp_snaive, series="SNaive", PI=FALSE) +
autolayer(gdp_theta, series="Theta Method", PI=FALSE) +
autolayer(gdp_arima, series="Auto ARIMA", PI=FALSE) +
autolayer(gdp_ets, series="ETS", PI=FALSE) +
xlab("Year") + ylab("Mln. Euro") +
ggtitle("Модель 0, 00") +
guides(colour=guide_legend(title="Forecast")) +
theme(aspect.ratio = 0.75)
autoplot(window(gdp_agg, start=2012)) +
autolayer(gdp_rwf, series="RW", PI=FALSE)
autoplot(window(gdp_agg, start=2012))
install.packages("forecast")
library(forecast)
library(ggplot2)
gdp_agg <- read.csv(file="data/eu_gdp_eu28.csv", header=TRUE, sep=",")
gdp_agg  <- ts(gdp_agg$values, frequency = 4, start = 1995)
gdp_agg
autoplot(gdp_agg) +
xlab("Year") + ylab("Mln. Euro") +
ggtitle("ВВП ЕС")
train <- window(gdp_agg, end=c(2016,4))
test <- window(gdp_agg, start=c(2017,1))
gdp_rwf <- rwf(train,h=7)
gdp_rwfwd <- rwf(train,h=7, drift=TRUE)
gdp_snaive  <- snaive(train,h=7)
gdp_theta  <- thetaf(train, h=7)
gdp_arima  <- forecast(auto.arima(train), h=7)
gdp_ets <- forecast(ets(train), h=7)
autoplot(window(gdp_agg, start=2012)) +
autolayer(gdp_rwf, series="RW", PI=FALSE) +
autolayer(gdp_rwfwd, series="RW with drift", PI=FALSE) +
autolayer(gdp_snaive, series="SNaive", PI=FALSE) +
autolayer(gdp_theta, series="Theta Method", PI=FALSE) +
autolayer(gdp_arima, series="Auto ARIMA", PI=FALSE) +
autolayer(gdp_ets, series="ETS", PI=FALSE) +
xlab("Year") + ylab("Mln. Euro") +
ggtitle("Модель 0, 00") +
guides(colour=guide_legend(title="Forecast")) +
theme(aspect.ratio = 0.75)
autoplot(window(gdp_agg, start=2012)) +
autolayer(gdp_rwf, series="RW", PI=FALSE) +
autolayer(gdp_rwfwd, series="RW with drift", PI=FALSE) +
autolayer(gdp_snaive, series="SNaive", PI=FALSE) +
autolayer(gdp_theta, series="Theta Method", PI=FALSE) +
autolayer(gdp_arima, series="Auto ARIMA", PI=FALSE) +
autolayer(gdp_ets, series="ETS", PI=FALSE) +
xlab("Year") + ylab("Mln. Euro") +
ggtitle("Модель 0, 00") +
guides(colour=guide_legend(title="Forecast")) +
theme(aspect.ratio = 0.75)
